{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/auth/google": {
            "post": {
                "description": "Accepts jwt idToken from flutter and sets session cookies",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Google Auth",
                "parameters": [
                    {
                        "type": "string",
                        "description": "idToken",
                        "name": "idToken",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Google Auth Started",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dev/force_login": {
            "get": {
                "description": "Creates a session for a user by email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dev"
                ],
                "summary": "Force Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Session created, user logged in",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/dev/generate_mock_users": {
            "get": {
                "description": "Creates mock users for development purposes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Dev"
                ],
                "summary": "Create Mock Users",
                "responses": {
                    "200": {
                        "description": "Mock users created",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/user_image": {
            "post": {
                "consumes": [
                    "image/jpeg"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Adds user image",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Image",
                        "name": "image",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/user_image/{image_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Gets user image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Media"
                ],
                "summary": "Deletes user image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/media/{user_id}/{image_id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg"
                ],
                "tags": [
                    "Public Media"
                ],
                "summary": "Gets image -\u003e unprotected route",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Image ID",
                        "name": "image_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/twilio/send-sms": {
            "post": {
                "description": "Send an SMS message",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Twilio"
                ],
                "summary": "Send SMS",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipient phone number",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message body",
                        "name": "body",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "SMS sent successfully!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/twilio/verify-phone": {
            "post": {
                "description": "Verify a phone number",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Twilio"
                ],
                "summary": "Verify Phone Number",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Recipient phone number",
                        "name": "to",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Verification code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Phone number verified successfully!",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/Testing_Context": {
            "get": {
                "description": "returns a string from user routes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User test route",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/logout": {
            "post": {
                "description": "logs out a user",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User logout route",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "description": "returns a string from user routes",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User test route",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "takes in a json object and attempts to update the user, does not modify base fields such as email, it is a protected route",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User update route",
                "parameters": [
                    {
                        "description": "Data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/webAuth/google": {
            "get": {
                "description": "Begins the google auth process",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Web Auth"
                ],
                "summary": "Begin Google Auth",
                "responses": {
                    "200": {
                        "description": "Google Auth Started",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/webAuth/google/callback": {
            "get": {
                "description": "Callback for google auth",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Web Auth"
                ],
                "summary": "Google OAuth Callback",
                "responses": {
                    "200": {
                        "description": "Google Auth Callback",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}